{"version":3,"sources":["webpack:///./src/pages/summary.js"],"names":["SummaryWrapper","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__","target","name","styles","ResumeContainer","NameBlock","BasicsBlock","SectionLine","SectionBlock","SectionName","SectionContent","JobBlock","SkillBlock","HomeLink","Link","SummaryPage","_ref","_ref$data$summaryJson","data","summaryJson","_ref$data$summaryJson2","basics","label","email","location","profiles","work","education","skills","languages","interests","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","_components__WEBPACK_IMPORTED_MODULE_8__","to","className","city","region","countryCode","slice","map","_ref2","index","url","id","react__WEBPACK_IMPORTED_MODULE_4__","key","href","replace","_ref3","company","position","startDate","endDate","website","summary","highlights","format","Date","highlight","length","_ref4","institution","area","studyType","skill","keywords","join","_ref5","language","fluency","interest","propTypes","PropTypes","shape","isRequired","query"],"mappings":"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","file":"component---src-pages-summary-js-a95f6ac3788eaf726d31.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"@emotion/styled\";\nimport { graphql, Link } from \"gatsby\";\nimport { format } from \"date-fns\";\nimport { SiteHead, HomeButton } from \"../components\";\n\nconst SummaryWrapper = styled.div`\n  background: #eeeeee;\n  font: 12px \"Times New Roman\", Times, sans-serif;\n  line-height: 1.4;\n  em {\n    color: #999;\n  }\n  p {\n    line-height: 1.4;\n  }\n  ul {\n    margin-bottom: 0;\n  }\n  li {\n    margin-bottom: 2px;\n  }\n  a {\n    text-decoration: none;\n  }\n\n  @media only screen and (max-width: 40em) {\n    margin: 0;\n    font-size: 14px;\n  }\n\n  @media print {\n    a {\n      color: black;\n    }\n  }\n`;\n\nconst ResumeContainer = styled.div`\n  margin: 0 auto;\n  max-width: 50rem;\n  padding: 80px 100px;\n  background: #fff;\n  border: 1px solid #ccc;\n  box-shadow: 2px 2px 4px #aaa;\n  -webkit-box-shadow: 2px 2px 4px #aaa;\n\n  @media only screen and (max-width: 40em) {\n    margin: 0 auto;\n    max-width: 600px;\n    padding: 0.5em 1em;\n    border: none;\n  }\n\n  @media print {\n    margin: 0 auto;\n    max-width: 600px;\n    padding: 0px 0px;\n    border: 0px;\n    background: #fff;\n    box-shadow: none;\n    -webkit-box-shadow: none;\n  }\n`;\n\nconst NameBlock = styled.div`\n  font-size: 20px;\n`;\n\nconst BasicsBlock = styled.div`\n  font-size: 12px;\n  @media only screen and (max-width: 40em) {\n    font-size: 14px;\n  }\n`;\n\nconst SectionLine = styled.div`\n  border-style: dashed;\n  border-width: 1px;\n  border-color: #cfcfcf;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst SectionBlock = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst SectionName = styled.div`\n  width: 18%;\n  vertical-align: top;\n  display: inline-block;\n\n  @media only screen and (max-width: 40em) {\n    width: auto;\n    margin-right: 0.5rem;\n  }\n`;\n\nconst SectionContent = styled.div`\n  width: 80%;\n  vertical-align: top;\n  display: inline-block;\n\n  ul {\n    padding-left: 20px;\n    margin-top: 6px;\n    list-style-type: circle;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .date {\n    float: right;\n  }\n\n  .separator {\n    height: 14px;\n  }\n\n  @media only screen and (max-width: 40em) {\n    width: 100%;\n    .date {\n      padding-right: 2em;\n    }\n  }\n`;\n\nconst JobBlock = styled.div`\n  page-break-inside: avoid;\n`;\n\nconst SkillBlock = styled.div`\n  margin-bottom: 4px;\n`;\n\nconst HomeLink = styled(Link)`\n  @media print {\n    display: none;\n  }\n`;\n\nconst SummaryPage = ({\n  data: {\n    summaryJson: {\n      basics: { name, label, email, location, profiles },\n      work,\n      education,\n      skills,\n      languages,\n      interests\n    }\n  }\n}) => (\n  <SummaryWrapper>\n    <SiteHead />\n    <HomeLink to=\"/\">\n      {\" \"}\n      <HomeButton />\n    </HomeLink>\n    <ResumeContainer>\n      <NameBlock>\n        <span className=\"name\">{name}</span>\n        {\", \"}\n        <span className=\"label\">{label}</span>\n      </NameBlock>\n      <BasicsBlock>\n        <div className=\"contactBlock\">\n          <span className=\"email\">{email}</span>\n          <span className=\"divider\"> | </span>\n          <span className=\"address\">\n            {location.city}, {location.region}, {location.countryCode}\n          </span>\n        </div>\n        <div className=\"profilesBlock\">\n          {profiles.slice(0, 3).map(({ url, id }, index) => (\n            <Fragment key={id}>\n              <a href={url}>{url.replace(\"https://\", \"\")}</a>\n              {index < 2 && \" |  \"}\n            </Fragment>\n          ))}\n        </div>\n      </BasicsBlock>\n      <SectionLine />\n\n      <SectionBlock>\n        <SectionName>\n          <span>EXPERIENCE</span>\n        </SectionName>\n        <SectionContent>\n          {work.map(\n            (\n              {\n                company,\n                position,\n                startDate,\n                endDate,\n                website,\n                summary,\n                highlights\n              },\n              index\n            ) => (\n              <JobBlock key={company}>\n                <div className=\"blockHeader\">\n                  <span className=\"title\">\n                    {company}, {position}\n                  </span>\n                  <span className=\"date\">\n                    {format(new Date(startDate), \"MMMM yyyy\")} &mdash;{\" \"}\n                    {endDate\n                      ? format(new Date(endDate), \"MMMM yyyy\")\n                      : \"Present\"}\n                  </span>\n                </div>\n                <div>\n                  <a href={website}>{website.replace(\"https://\", \"\")}</a>\n                </div>\n                <div>{summary}</div>\n                <ul className=\"highlights\">\n                  {highlights.map(highlight => (\n                    <li key={highlight}>{highlight}</li>\n                  ))}\n                </ul>\n                {index < work.length - 1 && <div className=\"separator\" />}\n              </JobBlock>\n            )\n          )}\n        </SectionContent>\n      </SectionBlock>\n\n      <SectionLine />\n\n      <SectionBlock>\n        <SectionName>\n          <span>EDUCATION</span>\n        </SectionName>\n        <SectionContent>\n          {education.map(\n            ({ institution, startDate, endDate, area, studyType }) => (\n              <div key={institution} className=\"educationBlock\">\n                <span className=\"title\">{institution}</span>\n                {format(new Date(startDate), \"MMMM yyyy\")} &mdash;{\" \"}\n                {endDate ? format(new Date(endDate), \"MMMM yyyy\") : \"Present\"}\n                <div>\n                  {studyType} - {area}\n                </div>\n              </div>\n            )\n          )}\n        </SectionContent>\n      </SectionBlock>\n\n      <SectionLine />\n      <SectionBlock>\n        <SectionName>\n          <span>SKILLS</span>\n        </SectionName>\n        <SectionContent>\n          {skills.map(skill => (\n            <SkillBlock key={skill.name}>\n              <span className=\"title\">{skill.name}: </span>\n              {skill.keywords.join(\", \")}\n            </SkillBlock>\n          ))}\n        </SectionContent>\n      </SectionBlock>\n\n      <SectionLine />\n\n      <SectionBlock>\n        <SectionName>\n          <span>LANGUAGES</span>\n        </SectionName>\n        <SectionContent>\n          {languages.map(({ language, fluency }, index) => (\n            <Fragment key={language}>\n              <span className=\"language\">{language} </span>\n              <span className=\"fluency\">\n                <em>({fluency})</em>\n              </span>\n              {index < languages.length - 1 && \", \"}\n            </Fragment>\n          ))}\n        </SectionContent>\n      </SectionBlock>\n\n      <SectionLine />\n\n      <SectionBlock>\n        <SectionName>\n          <span>INTERESTS</span>\n        </SectionName>\n        <SectionContent>\n          {interests.map((interest, index) => (\n            <Fragment key={interest.name}>\n              <span className=\"name\">{interest.name} </span>\n              <span className=\"keywords\">\n                <em>[{interest.keywords.join(\", \")}]</em>\n              </span>\n              {index < interests.length - 1 && \", \"}\n            </Fragment>\n          ))}\n        </SectionContent>\n      </SectionBlock>\n    </ResumeContainer>\n  </SummaryWrapper>\n);\n\nSummaryPage.propTypes = {\n  data: PropTypes.shape({}).isRequired\n};\n\nexport default SummaryPage;\n\nexport const query = graphql`\n  query SummaryQuery {\n    summaryJson {\n      basics {\n        name\n        label\n        email\n        location {\n          city\n          region\n          countryCode\n        }\n        profiles {\n          id\n          network\n          url\n        }\n      }\n\n      work {\n        company\n        position\n        website\n        startDate\n        endDate\n        summary\n        highlights\n      }\n\n      education {\n        institution\n        area\n        studyType\n        startDate\n        endDate\n      }\n      skills {\n        name\n        keywords\n      }\n\n      languages {\n        language\n        fluency\n      }\n\n      interests {\n        name\n        keywords\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}